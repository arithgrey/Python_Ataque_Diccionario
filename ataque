#!/usr/bin/env python
#coding: utf8
import crypt
import os
import re


#salt='MV2480Syyzzf74xz' ejemplo
#hash='VHzxiQuoezH2QxiVOr2mgAzTccCd7gRcmfJ.Jf3xuUULMPd1OPal7nFVD2R/ntTKy3r2tq7QEJLKzkElNjbkG1' ejemplo

#función que se encarga de realizar el ataque diccionario a sha1 

def getPasswCodificacionsha512():

	f = open('/etc/shadow', 'r') #Leemos el archivo /etc/shadow
	passhadow=f.readline() #Leemos la primer linea 
	f.close() #Cerramos el archivo
	print passhadow 
	cadenaOriginal=passhadow[5:111] #Cortamos la cadena 
	longitud= len(passhadow) #sacamos la extensión de la cadena 
	print "extención de la cadena: " , longitud
	tipodecifrado=passhadow[6] ##sacamos el tipo de cifrado que utiliza 6=sha-512 , 5=sha-256 , 1=MD5
	salt= passhadow[8:24] ##sacamos la cadena salt
	print salt #imprimimos el salt 
	
	texto=open("diccionario.lst", "r") #Abrimos nuestro diccionario 
	a=0 
	while True: #Iterador 
		linea=texto.readline().strip()  #Leemos la linea del diccionario y le quitamos los espacios 
		output = crypt.crypt(linea, '$6$%s$' % salt) #transformamos la cadena leída del diccionario a sha1 

		if output==cadenaOriginal: #Comparamos las cadenas  y si son iguales 
			print "Clave encontrada!! La clave es:" , linea	#imprimimos la clave encontrada 
			print "Cadena original: " , cadenaOriginal #Imprimimos la clave original 
			print "Cadena formada" , output	#imprimimos la cadena formada 
			break

		print a, ".-", linea, "______________", output #Si no son iguales imprimimos las cadenas transformadas 
		
		a+=1 #Aumentamos el contador 
	texto.close()  #Cerramos el archivo al terminar de leerlo 


#os.system('cat /etc/shadow | grep root')	
getPasswCodificacionsha512() #Mandamos llamar nuestra función 

#Desarrollador Medrano Salazar Jonathan Govinda
#Twitter: @arithgrey
#mail: arithgrey@gmail.com
#Facebook /arithgrey









